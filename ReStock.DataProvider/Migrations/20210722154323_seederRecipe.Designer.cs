// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReStock.DataProvider;

namespace ReStock.DataProvider.Migrations
{
    [DbContext(typeof(RestockDbContext))]
    [Migration("20210722154323_seederRecipe")]
    partial class seederRecipe
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReStock.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CookTime")
                        .HasColumnType("int");

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipe");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CookTime = 180,
                            Instruction = "Do this then that then boom",
                            Name = "Pork ribs"
                        },
                        new
                        {
                            Id = 2,
                            CookTime = 20,
                            Name = "Salat"
                        },
                        new
                        {
                            Id = 3,
                            Instruction = "Just this. Then .... Finally",
                            Name = "Meatballs"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Boiling Eggs"
                        },
                        new
                        {
                            Id = 5,
                            CookTime = 180,
                            Instruction = "Do this then that then boom",
                            Name = "Meat n Eggs"
                        },
                        new
                        {
                            Id = 6,
                            CookTime = 20,
                            Name = "Bolognese"
                        },
                        new
                        {
                            Id = 7,
                            Instruction = "Just this. Then .... Finally",
                            Name = "Steak Diane"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Lasagne"
                        },
                        new
                        {
                            Id = 9,
                            CookTime = 180,
                            Instruction = "Do this then that then boom",
                            Name = "Fishy"
                        },
                        new
                        {
                            Id = 10,
                            CookTime = 20,
                            Name = "Sushi"
                        },
                        new
                        {
                            Id = 11,
                            Instruction = "Just this. Then .... Finally",
                            Name = "Stuffy"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Ricey"
                        });
                });

            modelBuilder.Entity("ReStock.Models.ShoppingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShoppingItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = "200g",
                            ItemName = "Beans"
                        },
                        new
                        {
                            Id = 2,
                            Amount = "300g",
                            ItemName = "Butter"
                        },
                        new
                        {
                            Id = 3,
                            Amount = "1 box",
                            ItemName = "Grapes"
                        });
                });

            modelBuilder.Entity("ReStock.Models.StockItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = "2",
                            Name = "Bell pepper",
                            StockType = "FruitsAndVeggies"
                        },
                        new
                        {
                            Id = 2,
                            Amount = "1",
                            Name = "Fish",
                            StockType = "Proteins"
                        },
                        new
                        {
                            Id = 3,
                            Amount = "4",
                            Name = "Salt",
                            StockType = "Spices"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
